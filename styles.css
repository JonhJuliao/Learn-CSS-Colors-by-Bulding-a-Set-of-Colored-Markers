h1 {
  text-align: center;
}

.container {
  background-color: rgb(255, 255, 255);
  padding: 10px 0;
}

.marker {
  width: 200px;
  height: 25px;
  margin: 10px auto;
}

.cap {
  width: 60px;
  height: 25px;
}

.sleeve {
  width: 110px;
  height: 25px;
  background-color: rgba(255, 255, 255, 0.5);
  border-left: 10px double rgba(0, 0, 0, 0.75); /*Funciona como o rgb, mas o "a" significa alpha channel que é a opacidade*/
}

.cap, .sleeve {
  display: inline-block;
}

.red {
  background: linear-gradient(rgb(122, 74, 14), rgb(245, 62, 113), rgb(162, 27, 27));
  box-shadow: 0 0 20px 0 rgba(83, 14, 14, 0.8); 
}

.green {
  background: linear-gradient(#55680D, #71F53E, #116C31);
  box-shadow: 0 0 20px 0 #3B7E20CC; /*O CC do final é o alpha channel*/
}

.blue {
  background: linear-gradient(hsl(186, 76%, 16%), hsl(223, 90%, 60%), hsl(240, 56%, 42%));
  box-shadow: 0 0 20px 0 hsla(223, 59%, 31%, 0.8); /*Funciona como o hsl, mas tendo o alpha channel no final*/
}
/*
rgb:;
(0,0,0) = preto 
(255,255,255) = branco
Cores primarias:;
(255,0,0) = vermelho puro 
(0,255,0) = verde puro
(0,0,255) = azul puro
Cores secundarias:;
(255,255,0) = amarelo
(0,255,255) = ciano
(255,0,255) = magenta 
Cores terciarias:
(255,127,0) = laranja
(0,255,127) = spring green (é um verde azulado)
(127,0,255) = violeta
(127,255,0) = chartreuse green (é tipo um verde limão)
(0,127,255) = azure (é tipo um azul piscina)
(255,0,127) = rosa
*/

/*A very common way to apply color to an element with CSS is with hexadecimal or hex values. While hex values sound complicated, 
they're really just another form of RGB values.

Hex color values start with a # character and take six characters from 0-9 and A-F. The first pair of characters represent red, 
the second pair represent green, and the third pair represent blue. For example, #4B5320.

With hex colors, 00 is 0% of that color, and FF is 100%. So #00FF00 translates to 0% red, 100% green, and 0% blue, and is the same as rgb(0, 255, 0).
*/

/*
The HSL color model, or hue, saturation, and lightness, is another way to represent colors.

The CSS hsl function accepts 3 values: a number from 0 to 360 for hue, a percentage from 0 to 100 for saturation, and a percentage from 0 to 100 for lightness.

If you imagine a color wheel, the hue red is at 0 degrees, green is at 120 degrees, and blue is at 240 degrees.

Saturation is the intensity of a color from 0%, or gray, to 100% for pure color.

Lightness is how bright a color appears, from 0%, or complete black, to 100%, complete white, with 50% being neutral.
*/

/*
You've learned a few ways to set flat colors in CSS, but you can also use a color transition, or gradient, on an element.

A gradient is when one color transitions into another. The CSS linear-gradient function lets you control the direction of the transition along a line, 
and which colors are used.

One thing to remember is that the linear-gradient function actually creates an image element, and is usually paired with the background property which 
can accept an image as a value. (just background: instead background-color:)

The linear-gradient function is very flexible -- here is the basic syntax you'll use in this tutorial:

linear-gradient(gradientDirection, color1, color2, ...);

gradientDirection is the direction of the line used for the transition. color1 and color2 are color arguments, which are the colors that will be used 
in the transition itself. These can be any type of color, including color keywords, hex, rgb, or hsl.
*/